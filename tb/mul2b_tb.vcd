$date
	Tue Aug  3 22:31:09 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mul2b_tb $end
$var wire 1 ! m3 $end
$var wire 1 " m2 $end
$var wire 1 # m1 $end
$var wire 1 $ m0 $end
$var reg 1 % a0 $end
$var reg 1 & a1 $end
$var reg 1 ' b0 $end
$var reg 1 ( b1 $end
$var integer 32 ) i [31:0] $end
$scope module MUL $end
$var wire 1 % a0 $end
$var wire 1 & a1 $end
$var wire 1 ' b0 $end
$var wire 1 ( b1 $end
$var wire 1 $ m0 $end
$var wire 1 # m1 $end
$var wire 1 " m2 $end
$var wire 1 ! m3 $end
$var wire 1 * w0 $end
$var wire 1 + w1 $end
$var wire 1 , w2 $end
$var wire 1 - w3 $end
$var wire 1 . wc1 $end
$var wire 1 / wc2 $end
$var wire 1 0 ws1 $end
$var wire 1 1 ws2 $end
$scope module AND0 $end
$var wire 1 2 GND $end
$var wire 1 3 PWR $end
$var wire 1 % a1 $end
$var wire 1 ' a2 $end
$var wire 1 4 w1 $end
$var wire 1 5 w2 $end
$var wire 1 * y $end
$scope module INV $end
$var wire 1 6 GND $end
$var wire 1 7 PWR $end
$var wire 1 4 in $end
$var wire 1 * out $end
$upscope $end
$upscope $end
$scope module AND1 $end
$var wire 1 8 GND $end
$var wire 1 9 PWR $end
$var wire 1 & a1 $end
$var wire 1 ' a2 $end
$var wire 1 : w1 $end
$var wire 1 ; w2 $end
$var wire 1 + y $end
$scope module INV $end
$var wire 1 < GND $end
$var wire 1 = PWR $end
$var wire 1 : in $end
$var wire 1 + out $end
$upscope $end
$upscope $end
$scope module AND2 $end
$var wire 1 > GND $end
$var wire 1 ? PWR $end
$var wire 1 % a1 $end
$var wire 1 ( a2 $end
$var wire 1 @ w1 $end
$var wire 1 A w2 $end
$var wire 1 , y $end
$scope module INV $end
$var wire 1 B GND $end
$var wire 1 C PWR $end
$var wire 1 @ in $end
$var wire 1 , out $end
$upscope $end
$upscope $end
$scope module AND3 $end
$var wire 1 D GND $end
$var wire 1 E PWR $end
$var wire 1 & a1 $end
$var wire 1 ( a2 $end
$var wire 1 F w1 $end
$var wire 1 G w2 $end
$var wire 1 - y $end
$scope module INV $end
$var wire 1 H GND $end
$var wire 1 I PWR $end
$var wire 1 F in $end
$var wire 1 - out $end
$upscope $end
$upscope $end
$scope module HA1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 . carry $end
$var wire 1 0 sum $end
$var wire 1 J null $end
$scope module AND $end
$var wire 1 K GND $end
$var wire 1 L PWR $end
$var wire 1 + a1 $end
$var wire 1 , a2 $end
$var wire 1 M w1 $end
$var wire 1 N w2 $end
$var wire 1 . y $end
$scope module INV $end
$var wire 1 O GND $end
$var wire 1 P PWR $end
$var wire 1 M in $end
$var wire 1 . out $end
$upscope $end
$upscope $end
$scope module XOR_XNOR $end
$var wire 1 Q GND $end
$var wire 1 R PWR $end
$var wire 1 + a $end
$var wire 1 S a_bar $end
$var wire 1 , b $end
$var wire 1 T b_bar $end
$var wire 1 U w1 $end
$var wire 1 V w2 $end
$var wire 1 W w3 $end
$var wire 1 X w4 $end
$var wire 1 J xnor_o $end
$var wire 1 0 xor_o $end
$scope module INV1 $end
$var wire 1 Y GND $end
$var wire 1 Z PWR $end
$var wire 1 + in $end
$var wire 1 S out $end
$upscope $end
$scope module INV2 $end
$var wire 1 [ GND $end
$var wire 1 \ PWR $end
$var wire 1 , in $end
$var wire 1 T out $end
$upscope $end
$scope module INV3 $end
$var wire 1 ] GND $end
$var wire 1 ^ PWR $end
$var wire 1 V in $end
$var wire 1 0 out $end
$upscope $end
$upscope $end
$upscope $end
$scope module HA2 $end
$var wire 1 . a $end
$var wire 1 - b $end
$var wire 1 / carry $end
$var wire 1 1 sum $end
$var wire 1 _ null $end
$scope module AND $end
$var wire 1 ` GND $end
$var wire 1 a PWR $end
$var wire 1 . a1 $end
$var wire 1 - a2 $end
$var wire 1 b w1 $end
$var wire 1 c w2 $end
$var wire 1 / y $end
$scope module INV $end
$var wire 1 d GND $end
$var wire 1 e PWR $end
$var wire 1 b in $end
$var wire 1 / out $end
$upscope $end
$upscope $end
$scope module XOR_XNOR $end
$var wire 1 f GND $end
$var wire 1 g PWR $end
$var wire 1 . a $end
$var wire 1 h a_bar $end
$var wire 1 - b $end
$var wire 1 i b_bar $end
$var wire 1 j w1 $end
$var wire 1 k w2 $end
$var wire 1 l w3 $end
$var wire 1 m w4 $end
$var wire 1 _ xnor_o $end
$var wire 1 1 xor_o $end
$scope module INV1 $end
$var wire 1 n GND $end
$var wire 1 o PWR $end
$var wire 1 . in $end
$var wire 1 h out $end
$upscope $end
$scope module INV2 $end
$var wire 1 p GND $end
$var wire 1 q PWR $end
$var wire 1 - in $end
$var wire 1 i out $end
$upscope $end
$scope module INV3 $end
$var wire 1 r GND $end
$var wire 1 s PWR $end
$var wire 1 k in $end
$var wire 1 1 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1s
0r
1q
0p
1o
0n
zm
0l
1k
1j
1i
1h
1g
0f
1e
0d
zc
1b
1a
0`
1_
1^
0]
1\
0[
1Z
0Y
zX
0W
1V
1U
1T
1S
1R
0Q
1P
0O
zN
1M
1L
0K
1J
1I
0H
zG
1F
1E
0D
1C
0B
zA
1@
1?
0>
1=
0<
z;
1:
19
08
17
06
z5
14
13
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
0(
0'
0&
0%
0$
0#
0"
0!
$end
#5
b1 )
#10
b10 )
05
0;
1'
#15
b11 )
0A
0G
1(
z5
z;
0'
#20
b100 )
05
0;
1'
#25
b101 )
1%
zA
zG
0(
z5
z;
0'
#30
b110 )
1$
1*
04
05
0;
1'
#35
b111 )
0N
zU
0J
1#
10
0V
0T
1,
0@
0A
0G
1(
0$
0*
14
z5
z;
0'
#40
b1000 )
1$
1*
04
05
0;
1'
#45
b1001 )
1&
0%
zN
1U
1J
0#
00
1V
1T
0,
1@
zA
zG
0(
0$
0*
14
z5
z;
0'
#50
b1010 )
05
0J
1#
10
0V
0X
zW
0S
1+
0:
0;
1'
#55
b1011 )
0A
0c
zj
0_
1"
11
0k
0i
1-
0F
0G
1(
z5
1J
0#
00
1V
zX
0W
1S
0+
1:
z;
0'
#60
b1100 )
05
0J
1#
10
0V
0X
zW
0S
1+
0:
0;
1'
#65
b1101 )
1%
zA
zc
1j
1_
0"
01
1k
1i
0-
1F
zG
0(
z5
1J
0#
00
1V
zX
0W
1S
0+
1:
z;
0'
#70
b1110 )
1$
1*
04
05
0J
1#
10
0V
0X
zW
0S
1+
0:
0;
1'
#75
b1111 )
0N
zU
0T
1,
0@
0A
0c
zj
0_
1"
11
0k
0i
1-
0F
0G
1(
0$
0*
14
z5
0J
1#
10
0V
zX
0W
1S
0+
1:
z;
0'
#80
b10000 )
1$
1*
04
05
1!
1/
0b
0m
1j
1_
0"
01
1k
zl
0h
1.
0M
0X
1U
1J
0#
00
1V
zW
0S
1+
0:
0;
1'
